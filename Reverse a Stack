#include <iostream>
#include<stack>
using namespace std;

void insertAtBottom(stack<int>&s,int target){
      
      // base case
      if(s.empty()){
        s.push(target);
        return;
      }
      
      int temp = s.top();
      s.pop();


    // this is the recursive call 
      insertAtBottom(s,target);

  // this  is the backtracking 
      s.push(temp);


}

void reverseStack(stack<int>&s){

      // base case
      if(s.empty()){
        return;
      }
       
        int target = s.top();
        s.pop();

    // this is the recursive call 
      reverseStack(s);

      insertAtBottom(s,target);


}

int main() {
  cout << "Hello world!" << endl;
  stack<int>s;

 s.push(10);
 s.push(20);
 s.push(30);
 s.push(40);
 s.push(50);
 
 if(s.empty()){
  cout<<"The stack is empty ";
  return 0;
 }

 reverseStack(s);

 while(!s.empty()){
   cout<<s.top()<<" ";
   s.pop();
 }

  return 0;
}
